@model List<UserManagementViewModel>
@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
}

<style>
    .user-management-card {
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .user-management-header {
        background: linear-gradient(135deg, #1d3557, #457b9d) !important;
        color: white;
        padding: 1.5rem;
        text-align: center;
    }

        .user-management-header h2 {
            margin: 0;
            font-weight: 600;
            font-size: 1.8rem;
        }

    .user-table {
        width: 100%;
        margin-bottom: 0;
        background-color: #fff;
    }

        .user-table th {
            background-color: #f8f9fa;
            font-weight: 600;
            padding: 12px;
            text-align: left;
        }

        .user-table td {
            padding: 12px;
            vertical-align: middle;
        }

    .status-active {
        color: green;
        font-weight: bold;
    }

    .status-blocked {
        color: red;
        font-weight: bold;
    }

    .role-badge {
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
        text-transform: capitalize;
    }

    .role-admin {
        background-color: #dc3545;
        color: white;
    }

    .role-manager {
        background-color: #ffc107;
        color: black;
    }

    .role-user {
        background-color: #0d6efd;
        color: white;
    }

    .btn-block, .btn-unblock {
        padding: 6px 12px;
        border-radius: 5px;
        font-size: 0.85rem;
    }

    .btn-block {
        background-color: #dc3545;
        color: white;
        border: none;
    }

    .btn-unblock {
        background-color: #28a745;
        color: white;
        border: none;
    }

        .btn-block:hover,
        .btn-unblock:hover {
            opacity: 0.85;
        }

    .role-select-btn {
        background-color: #6c757d;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 6px 12px;
        font-size: 0.85rem;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .role-select-item.active {
        background-color: #e9ecef;
    }

    .role-select-item .bi-check {
        color: darkred;
        visibility: hidden;
    }

    .role-select-item.active .bi-check {
        visibility: visible;
    }

    .btn-back {
        background: linear-gradient(135deg, #6c757d, #495057);
        color: white;
        border: none;
        border-radius: 8px;
        padding: 10px 25px;
        font-weight: 500;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .btn-back:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(108, 117, 125, 0.3);
            color: white;
        }

    .search-container {
        margin: 20px 0;
        display: flex;
        justify-content: flex-start;
        gap: 15px;
        flex-wrap: wrap;
    }

        .search-container select,
        .search-container input {
            border: 1px solid #ced4da;
            border-radius: 5px;
            padding: 8px;
            min-width: 200px;
        }
</style>

<div class="card user-management-card shadow border-0 mt-4">
    <div class="card-header user-management-header">
        <h2 class="text-white m-0">
            <i class="bi bi-people-fill me-2"></i>User Management
        </h2>
    </div>

    <!-- Filters -->
    <div class="bg-white shadow rounded-lg p-4 mb-6">
        <div class="flex flex-col md:flex-row gap-4">
            <div class="w-full md:w-1/3">
                <label class="block text-gray-700 font-medium mb-1">Role</label>
                <select id="roleFilter" class="w-full px-3 py-2 border rounded focus:ring-blue-500">
                    <option value="">All Roles</option>
                    @foreach (var role in Model.Select(m => m.CurrentRole).Distinct())
                    {
                        <option value="@role">@role</option>
                    }
                </select>
            </div>
            <div class="w-full md:w-1/3">
                <label class="block text-gray-700 font-medium mb-1">Search</label>
                <input type="text" id="userSearch" placeholder="Username"
                       class="w-full px-3 py-2 border rounded focus:ring-blue-500" />
            </div>
            <div class="w-full md:w-1/3 flex items-end">
                <button id="resetFilters"
                        class="w-full px-4 py-2 bg-gray-100 text-gray-700 rounded hover:bg-gray-200">
                    Reset
                </button>
            </div>
        </div>
    </div>

    

    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="user-table table table-hover">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Status</th>
                        <th>Role</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="userTableBody">
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>@user.UserName</td>
                            <td>@user.Email</td>
                            <td>
                                @if (user.IsBlocked)
                                {
                                    <span class="status-blocked">Blocked</span>
                                }
                                else
                                {
                                    <span class="status-active">Active</span>
                                }
                            </td>
                            <td>
                                <span class="role-badge @user.GetRoleBadgeClass()">@user.CurrentRole</span>
                            </td>
                            <td>
                                <div class="d-flex gap-2">
                                    @if (user.IsBlocked)
                                    {
                                        <button class="btn-unblock" title="Unblock user" onclick="unblockUser('@user.Id')">
                                            <i class="bi bi-unlock"></i> Unblock
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn-block" title="Block user" onclick="blockUser('@user.Id')">
                                            <i class="bi bi-lock"></i> Block
                                        </button>
                                    }

                                    <div class="dropdown">
                                        <button class="role-select-btn dropdown-toggle" type="button" id="roleDropdown-@user.Id"
                                                data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="bi bi-person-gear"></i> Change Role
                                        </button>
                                        <ul class="dropdown-menu" aria-labelledby="roleDropdown-@user.Id">
                                            @foreach (var role in user.AvailableRoles)
                                            {
                                                <li class="dropdown-item role-select-item @(role == user.CurrentRole ? "active" : "")"
                                                    onclick="updateUserRole('@user.Id', '@role')">
                                                    <i class="bi @(role == user.CurrentRole ? "bi-check" : "") me-1"></i>
                                                    <span class="role-badge @user.GetRoleBadgeClass()">@role</span>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        const roleFilter = document.getElementById("roleFilter");
        const userSearch = document.getElementById("userSearch");

        function filterTable() {
            const selectedRole = roleFilter.value.toLowerCase();
            const searchValue = userSearch.value.toLowerCase();
            const rows = document.querySelectorAll("#userTableBody tr");

            rows.forEach(row => {
                const username = row.querySelector("td:nth-child(1)").textContent.toLowerCase();
                const role = row.querySelector("td:nth-child(4)").textContent.toLowerCase();

                const matchesRole = selectedRole === "" || role.includes(selectedRole);
                const matchesSearch = searchValue === "" || username.includes(searchValue);

                row.style.display = (matchesRole && matchesSearch) ? "" : "none";
            });
        }

        roleFilter.addEventListener("change", filterTable);
        userSearch.addEventListener("input", filterTable);

        document.getElementById("resetFilters").addEventListener("click", function () {
            document.getElementById("roleFilter").value = "";
            document.getElementById("userSearch").value = "";
            filterTable(); // تعيد الفلترة بعد مسح البيانات
        });
    </script>
}

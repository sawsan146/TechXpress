@model ProductDetailsViewModel
<link rel="stylesheet" href="~/css/final details.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

<style>
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        filter: invert(0);
        background-color: black;
        border-radius: 50%;
        padding: 10px;
        opacity: 1;
    }

    .carousel-inner {
        height: 425px !important;
    }

    .carousel-item img {
        height: 425px;
        width: 100%;
        object-fit: cover;
    }
</style>

<div class="container py-5" style="margin-bottom:100px;margin-top:30px;">
    <div class="row gx-5">
        <div class="col-md-6">
            <div class="product-images">
                @if (Model.UploadedImages != null && Model.UploadedImages.Any())
                {
                    <div id="productCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="2000">
                        <div class="carousel-inner rounded-4" style="height: 425px;">
                            @for (int i = 0; i < Model.UploadedImages.Count; i++)
                            {
                                var image = Model.UploadedImages[i];
                                var activeClass = i == 0 ? "active" : "";
                                <div class="carousel-item @activeClass">
                                    <img src="@Url.Content("~/images/product/" + image)" class="d-block w-100" alt="@Model.Name" style="height: 425px; object-fit: contain;" />
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                }
                else
                {
                    <img src="~/images/default-product.png" alt="Default product image" class="img-fluid rounded-4 product-image" style="width:100%;height:425px; object-fit: contain;" />
                }
            </div>
        </div>

        <div class="col-md-6">
            <div class="product-details" style="color: black;">
                <h1 class="h2 fw-semibold text-gray-800 mb-2">@Model.Name</h1>
                <div class="d-flex align-items-center mb-3">
                    <span class="text-sm text-warning me-1">&#9733;&#9733;&#9733;&#9733;&#9733;</span>
                        @if (Model.Stock > 0) {
                        <p class="text-xs text-success ms-2"> In Stock</p>
                    }
                    else
                    {
                        <p class="text-xs text-danger ms-2"> Out of Stock</p>

                    }
                </div>
                <p class="h4 fw-bold text-gray-900 mb-4">$@Model.Price</p>
                <p class="text-gray-600 mb-4">@Model.Description</p>

                <div class="mb-3">
                    @if (!string.IsNullOrWhiteSpace(Model.Brand))
                    {
                        <p><strong>Brand:</strong> @Model.Brand</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Processor))
                    {
                        <p><strong>Processor:</strong> @Model.Processor</p>
                    }
                    @if (Model.RAM > 0)
                    {
                        <p><strong>RAM:</strong> @Model.RAM GB</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Storage))
                    {
                        <p><strong>Storage:</strong> @Model.Storage</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.GPU))
                    {
                        <p><strong>GPU:</strong> @Model.GPU</p>
                    }
                    @if (Model.ScreenSize > 0)
                    {
                        <p><strong>Screen Size:</strong> @Model.ScreenSize" inches</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Resolution))
                    {
                        <p><strong>Resolution:</strong> @Model.Resolution</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.CategoryName))
                    {
                        <p><strong>Category:</strong> @Model.CategoryName</p>
                    }
                </div>

                <div class="d-flex align-items-center mb-4">
                    <div class="quantity-input-group me-4">
                        <button id="decrement" style="border-radius: 30%;background-color:#aaa8a8;width:20px">-</button>
                        <input type="number" id="quantity" value="2" min="1" aria-label="Quantity" style="width: 30px;background-color:#f0f0f0;text-align:center" />
                        <button id="increment" style="border-radius: 30%;background-color:#aaa8a8;width:20px">+</button>
                    </div>

                    <form asp-controller="Cart" asp-action="AddToCart" asp-route-productId="@Model.ProductID" method="post" style="display: inline;">
                        @* <input type="hidden" name="product_id" value="@Model.ProductID" /> *@
                        <button type="submit" class="buy-now-button" style="margin-left: 0; display: inline-flex; align-items: center; border: none; background-color:#dc3545; padding: 0; cursor: pointer; text-decoration: none; color: white; height:30px;padding:.75em 1.5em;">
                            <i class="bi bi-cart3 fs-5"></i>
                            Add to Cart
                        </button>
                    </form>
                </div>

                <div class="mb-4">
                    <div class="free-delivery-box">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-success">
                            <path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"></path>
                            <path d="M9 12l2 2 4-4"></path>
                        </svg>
                        <span>Free Delivery</span>
                    </div>
                </div>

                <div class="mb-4">
                    <div class="return-delivery-box">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-primary">
                            <path d="M10.21 4.13a8 8 0 1 0 9.66 9.66"></path>
                            <path d="M10 14l-3-3 3-3"></path>
                            <path d="M14 14l3-3-3-3"></path>
                        </svg>
                        <span>Free 30 Days Delivery Returns.</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const quantityInput = document.getElementById('quantity');
        const incrementButton = document.getElementById('increment');
        const decrementButton = document.getElementById('decrement');

        incrementButton.addEventListener('click', () => {
            let currentValue = parseInt(quantityInput.value);
            currentValue++;
            quantityInput.value = currentValue;
        });

        decrementButton.addEventListener('click', () => {
            let currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) { 
                currentValue--;
                quantityInput.value = currentValue;
            }
        });
    });
</script>

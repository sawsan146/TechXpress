@model ProductDetailsViewModel
<link rel="stylesheet" href="~/css/final details.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f8f9fa;
    }

    .product-container {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0,0,0,0.1);
        padding: 30px;
        margin-top: 30px;
        margin-bottom: 50px;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        filter: invert(0);
        background-color: black;
        border-radius: 50%;
        padding: 10px;
        opacity: 1;
        width: 30px;
        height: 30px;
        background-size: 50% 50%;
    }

    .carousel-container {
        position: relative;
        width: 100%;
        height: 425px;
        overflow: hidden;
        background-color: #f8f9fa;
        border-radius: 8px;
    }

    .carousel-inner {
        height: 425px !important;
        position: relative;
    }

    .carousel-item {
        height: 425px;
    }

        .carousel-item img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            background-color: #f8f9fa;
        }

    .carousel-control-prev,
    .carousel-control-next {
        width: 40px;
    }

    .product-details {
        padding: 0 20px;
    }

    .product-title {
        font-size: 28px;
        font-weight: 700;
        margin-bottom: 15px;
        color: #212529;
    }

    .price {
        font-size: 24px;
        font-weight: 700;
        color: #dc3545;
        margin: 20px 0;
    }

    .product-description {
        color: #6c757d;
        line-height: 1.6;
        margin-bottom: 25px;
    }

    .specs p {
        margin-bottom: 8px;
        color: #495057;
    }

    .specs strong {
        color: #212529;
        width: 120px;
        display: inline-block;
    }

    .quantity-input-group {
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .quantity-input-group button {
            border: none;
            background: #e9ecef;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .quantity-input-group input {
            width: 50px;
            text-align: center;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            padding: 5px;
        }

    .buy-now-button {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: 600;
        transition: all 0.3s;
    }

        .buy-now-button:hover {
            background-color: #bb2d3b;
        }

    .delivery-box {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 15px;
        padding: 10px;
        background-color: #f8f9fa;
        border-radius: 5px;
    }

        .delivery-box svg {
            flex-shrink: 0;
        }

    .rating {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .stock-status {
        padding: 3px 10px;
        border-radius: 15px;
        font-size: 14px;
        font-weight: 500;
    }

    .in-stock {
        background-color: #d1e7dd;
        color: #0f5132;
    }

    .out-of-stock {
        background-color: #f8d7da;
        color: #842029;
    }
</style>

<div class="container product-container">
    <div class="row">
        <div class="col-md-6">
            <div class="product-images">
                @if (Model.UploadedImages != null && Model.UploadedImages.Any())
                {
                    <div class="carousel-container">
                        <div id="productCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="2000">
                            <div class="carousel-inner rounded-4">
                                @for (int i = 0; i < Model.UploadedImages.Count; i++)
                                {
                                    var image = Model.UploadedImages[i];
                                    var activeClass = i == 0 ? "active" : "";
                                    <div class="carousel-item @activeClass">
                                        <img src="@Url.Content("~/images/product/" + image)" class="d-block w-100" alt="@Model.Name" />
                                    </div>
                                }
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                    </div>
                }
                else
                {
                    <div class="carousel-container">
                        <img src="~/images/default-product.png" alt="Default product image" class="img-fluid rounded-4 product-image" />
                    </div>
                }
            </div>
        </div>

        <div class="col-md-6">
            <div class="product-details">
                <h1 class="product-title">@Model.Name</h1>
                <div class="d-flex align-items-center mb-4">
                    <div class="rating">
                        <span class="text-warning">&#9733;&#9733;&#9733;&#9733;&#9733;</span>
                    </div>
                    @if (Model.Stock > 0)
                    {
                        <span class="stock-status in-stock ms-3">In Stock</span>
                    }
                    else
                    {
                        <span class="stock-status out-of-stock ms-3">Out of Stock</span>
                    }
                </div>

                <div class="price">$@Model.Price</div>

                <p class="product-description">@Model.Description</p>

                <div class="specs mb-4">
                    @if (!string.IsNullOrWhiteSpace(Model.Brand))
                    {
                        <p><strong>Brand:</strong> @Model.Brand</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Processor))
                    {
                        <p><strong>Processor:</strong> @Model.Processor</p>
                    }
                    @if (Model.RAM > 0)
                    {
                        <p><strong>RAM:</strong> @Model.RAM GB</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Storage))
                    {
                        <p><strong>Storage:</strong> @Model.Storage</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.GPU))
                    {
                        <p><strong>GPU:</strong> @Model.GPU</p>
                    }
                    @if (Model.ScreenSize > 0)
                    {
                        <p><strong>Screen Size:</strong> @Model.ScreenSize" inches</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Resolution))
                    {
                        <p><strong>Resolution:</strong> @Model.Resolution</p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.CategoryName))
                    {
                        <p><strong>Category:</strong> @Model.CategoryName</p>
                    }
                </div>

                <div class="d-flex align-items-center mb-4">
                    <div class="quantity-input-group me-4">
                        <button id="decrement">-</button>
                        <input type="number" id="quantity" value="1" min="1" aria-label="Quantity">
                        <button id="increment">+</button>
                    </div>

                    <form asp-controller="Cart" asp-action="AddToCart" asp-route-productId="@Model.ProductID" method="post">
                        <button type="submit" class="buy-now-button">
                            <i class="bi bi-cart3 me-2"></i>
                            Add to Cart
                        </button>
                    </form>
                </div>

                <div class="mb-4">
                    <div class="delivery-box">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-success">
                            <path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"></path>
                            <path d="M9 12l2 2 4-4"></path>
                        </svg>
                        <span>Free Delivery on all orders</span>
                    </div>

                    <div class="delivery-box">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-primary">
                            <path d="M10.21 4.13a8 8 0 1 0 9.66 9.66"></path>
                            <path d="M10 14l-3-3 3-3"></path>
                            <path d="M14 14l3-3-3-3"></path>
                        </svg>
                        <span>Free 30 Days Returns</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const quantityInput = document.getElementById('quantity');
        const incrementButton = document.getElementById('increment');
        const decrementButton = document.getElementById('decrement');

        incrementButton.addEventListener('click', () => {
            let currentValue = parseInt(quantityInput.value);
            currentValue++;
            quantityInput.value = currentValue;
        });

        decrementButton.addEventListener('click', () => {
            let currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                currentValue--;
                quantityInput.value = currentValue;
            }
        });
    });
</script>

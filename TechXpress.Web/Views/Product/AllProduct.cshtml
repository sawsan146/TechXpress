@model ProductListViewModel

@{
    ViewData["Title"] = "All Products";
    var selectedCategory = Model.SelectedCategory;
    var categories = Model.Categories;
    var search = Model.SearchQuery;
}

<div class="container">

  
    <div class="sidebar">
        <h2><b>Categories</b></h2>
        <ul>
            @foreach (var cat in categories)
            {
                <li class="@(cat == selectedCategory ? "active" : "")">
                    <a href="@Url.Action("Index", "Product", new { category = cat, search = search })">@cat</a>
                </li>
            }
        </ul>

    </div>

    <div class="main-content">
        <p id="product-count">Showing @Model.Products.Count products</p>
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        <div class="product-list">
            @foreach (var product in Model.Products)
            {
                <div class="product-item" data-category="@product.CategoryName">
                    <div class="product-img-wrapper">
                        @if (product.ImageNamesForDisplay?.Any() == true)
                        {
                            <img src="~/images/product/@product.ImageNamesForDisplay.First()" alt="@product.Name" />
                        }
                        else
                        {
                            <img src="/images/placeholder.jpg" alt="@product.Name" />
                        }

                        <div class="icon-overlay">

                            <form method="post" asp-controller="WishList" asp-action="AddToWishList" asp-route-productId="@product.ProductID">
                                <button type="submit" class="text-danger text-decoration-none fs-5 heart-button"
                                        title="Add To Wishlist"
                                        aria-label="Add to Wishlist">
                                    <i class="fa fa-heart"></i>
                                </button>
                            </form>
                            <a asp-controller="Product" asp-action="ProductDetails" asp-route-id="@product.ProductID">
                                <i class="fa fa-eye"></i>
                            </a>
                        </div>
                    </div>

                    <div class="product-body">
                        <h5>@product.Name</h5>
                        <p class="price">$@product.Price</p>

                        <form method="post" asp-controller="Cart" asp-action="AddToCart" >
                            <button asp-controller="Cart" asp-action="AddToCart" asp-route-productId="@product.ProductID" type="submit" class="btn btn-custom">
                                <i class="fa fa-cart-plus me-2"></i> Add to Cart
                            </button>
                        </form>

                        <div class="category-label">
                            @{
                                var categoryItem = product.Categories != null ? product.Categories.FirstOrDefault(c => c.Value == product.Category_ID):null;
                            }
                            <span>@categoryItem?.Text</span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .container {
        display: flex;
        gap: 20px;
        padding: 20px;
        max-width: 1400px;
        margin: 0 auto;
        margin-top: 0;
    }

    .sidebar {
        width: 200px;
        background: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        margin-top: 0;
    }

        .sidebar h2 {
            font-size: 1.5em;
            margin-bottom: 15px;
            color: #333;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar li {
            margin: 10px 0;
        }

            .sidebar li.active {
                background: #e44d26;
                border-radius: 5px;
            }

        .sidebar a {
            text-decoration: none;
            color: #333;
            padding: 5px 10px;
            display: block;
        }

        .sidebar li.active a {
            color: #fff;
        }

    .main-content {
        flex: 1;
        margin-top: 0;
    }

    .product-list {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 25px;
        margin: 0;
    }

    .product-item {
        border: none;
        padding: 0;
        border-radius: 12px;
        background-color: #fff;
        transition: all 0.3s ease;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        box-shadow: 0 6px 18px rgba(0,0,0,0.1);
        width: 100%;
        max-width: 280px;
    }

        .product-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

    .product-img-wrapper {
        width: 100%;
        height: 150px;
        position: relative;
        overflow: hidden;
        background-color: #f8f9fa;

        display: flex;
        justify-content: center;
        align-items: center;
    }

        .product-img-wrapper img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
            object-position: center;

 
            transition: transform 0.3s ease;
        }

        .product-img-wrapper:hover img {
            transform: scale(1.05);
        }

    .icon-overlay {
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 2;
    }

    .product-img-wrapper:hover .icon-overlay {
        opacity: 1;
    }

    .price {
        font-weight: bold;
        color: #e44d26;
    }

    .star-rating i {
        cursor: pointer;
        transition: color 0.2s;
        color: #ccc;
    }

        .star-rating i.active {
            color: #f4b400;
        }

    .btn-custom {
        background-color: black;
        color: #fff;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-custom:hover {
            background-color: #495057;
        }

    .category-label {
        margin-top: 10px;
        text-align: center;
    }

        .category-label span {
            background-color: #f8f9fa;
            color: #666;
            font-size: 0.85em;
            padding: 5px 10px;
            border-radius: 12px;
            display: inline-block;
        }
</style>


@section scripts {
    <script>
        $(function () {
            
            const urlParams = new URLSearchParams(window.location.search);
            const selectedCategory = urlParams.get('category') || 'All Products';

            
            if (selectedCategory !== 'All Products') {
                $('.product-item').each(function () {
                    const productCategory = $(this).data('category');
                    if (productCategory !== selectedCategory) {
                        $(this).hide(); 
                    } else {
                        $(this).show(); 
                    }
                });

                
                const visibleProducts = $('.product-item:visible').length;
                $('#product-count').text(`Showing ${visibleProducts} products`);
            } else {
                $('.product-item').show(); 
                $('#product-count').text(`Showing ${$('.product-item').length} products`);
            }

            
            $('.add-to-cart').on('click', function () {
                alert('Product added to cart');
            });

            $('.star-rating i').on('click', function () {
                const $rating = $(this).parent();
                const value = $(this).data('value');
                const productId = $rating.data('product-id');

                $rating.attr('data-rating', value);
                $rating.find('i').each(function () {
                    $(this).toggleClass('active', $(this).data('value') <= value);
                });

                $.ajax({
                    url: '/Product/Rate',
                    type: 'POST',
                    data: {
                        productId: productId,
                        rating: value
                    },
                    success: function (response) {
                        console.log("Rating saved:", response);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error saving rating:", error);
                    }
                });
            });

            $('.star-rating').each(function () {
                const $rating = $(this);
                $rating.find('i').hover(
                    function () {
                        const hoverValue = $(this).data('value');
                        $rating.find('i').css('color', function () {
                            return $(this).data('value') <= hoverValue ? '#f4b400' : '#ccc';
                        });
                    },
                    function () {
                        const selectedValue = $rating.data('rating');
                        $rating.find('i').css('color', function () {
                            return $(this).data('value') <= selectedValue ? '#f4b400' : '#ccc';
                        });
                    }
                );
            });
        });
    </script>
}